/* ---------- otherRevenueModal.css ---------- */
/* Specific styling for Other Revenue Modal */
/* Uses standard modal.css and modalHeader styles */

/* TODO: Backend Development Notes for Revenue Source Handling
 * 1. Update API to accept sourceName instead of sourceId for flexibility
 * 2. Implement logic to either find existing revenue source by name or create new one
 * 3. Add validation for custom revenue source names
 * 4. Consider adding source categorization for better organization
 * 5. Update database schema if needed to support dynamic source creation
 */

/* Form specific adjustments */
.formInput:disabled {
  background-color: var(--modal-input-disabled-background, #f8f9fa);
  color: var(--secondary-text-color);
  cursor: not-allowed;
}

.formInput[readonly] {
  background-color: var(--modal-input-disabled-background, #f8f9fa);
  color: var(--secondary-text-color);
}

/* Error states */
.input-error {
  border-color: var(--error-color, #ef4444);
  box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.1);
}

.error-message {
  color: var(--error-color, #ef4444);
  font-size: 0.875rem;
  margin-top: 0.25rem;
  display: block;
}

/* Required field indicator */
.requiredTags {
  color: var(--error-color, #ef4444);
  font-weight: bold;
}

/* Select dropdown styling */
select.formInput {
  cursor: pointer;
}

select.formInput:disabled {
  cursor: not-allowed;
}

/* Textarea specific styling */
textarea.formInput {
  resize: vertical;
  min-height: 80px;
}

/* Combobox Styles */
.combobox-container {
  position: relative;
}

.combobox-dropdown {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: var(--modal-input-background, #ffffff);
  border: 1px solid var(--border-color, #ddd);
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  max-height: 200px;
  overflow-y: auto;
  z-index: 1000;
  margin-top: 2px;
}

.combobox-option {
  padding: 0.75rem;
  cursor: pointer;
  border-bottom: 1px solid var(--table-border-color, #eee);
  transition: background-color 0.2s;
}

.combobox-option:hover {
  background-color: var(--table-header-color, #f8f9fa);
}

.combobox-option:last-child {
  border-bottom: none;
}

/* Form layout */
.formRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  gap: 1rem;
  margin-bottom: 1rem;
}

.formField {
  display: flex;
  flex-direction: column;
  flex: 1;
  min-width: 250px;
}

.formField label {
  font-size: var(--input-label-font-size, 0.9rem);
  font-weight: var(--input-label-font-weight, 500);
  margin-bottom: 0.5rem;
  color: var(--primary-text-color);
}

.formInput {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-family: var(--font-sans);
  background-color: var(--modal-input-background, #ffffff);
  color: var(--primary-text-color);
  font-size: 14px;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.formInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(150, 28, 30, 0.1);
}

/* Button styling */
.modalButtons {
  margin-top: 2rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}

.addButton,
.saveButton,
.submitButton {
  background: var(--primary-color);
  color: var(--button-font-color);
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.2s;
}

.addButton:hover,
.saveButton:hover,
.submitButton:hover {
  background: var(--primary-hover-color);
}

.cancelButton {
  background: var(--secondary-text-color);
  color: var(--button-font-color);
  border: 1px solid var(--border-color);
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.2s;
}

.cancelButton:hover {
  background: var(--primary-text-color);
}

/* Responsive design */
@media (max-width: 768px) {
  .formRow {
    flex-direction: column;
  }

  .formField {
    min-width: 100%;
  }

  .modalButtons {
    flex-direction: column;
    gap: 0.5rem;
  }

  .modalButtons button {
    width: 100%;
  }
}